name: PR Integration Tests

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_DATABASE }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      PORT: ${{ secrets.PORT }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_POOL_MAX: ${{ secrets.DB_POOL_MAX }}
      DB_POOL_MIN: ${{ secrets.DB_POOL_MIN }}
      DB_POOL_ACQUIRE: ${{ secrets.DB_POOL_ACQUIRE }}
      DB_POOL_IDLE: ${{ secrets.DB_POOL_IDLE }}
      BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
      DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}

    steps:
      - name: Print Environment Variables for Debugging
        run: |
          echo "-----------------------------"
          echo "Environment Variables:"
          echo "PORT: $PORT"
          echo "DB_HOST: $DB_HOST"
          echo "DB_PORT: $DB_PORT"
          echo "DB_USER: $DB_USER"
          echo "DB_DATABASE: $DB_DATABASE"
          echo "DB_POOL_MAX: $DB_POOL_MAX"
          echo "DB_POOL_MIN: $DB_POOL_MIN"
          echo "DB_POOL_ACQUIRE: $DB_POOL_ACQUIRE"
          echo "DB_POOL_IDLE: $DB_POOL_IDLE"
          echo "-----------------------------"

      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      # 3. Cache Node.js dependencies to speed up workflow
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install project dependencies
      - name: Install Dependencies
        run: npm install

      # 5. Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL to be Ready
        run: |
          until pg_isready -h localhost -p 5432 -U $DB_USER -d $DB_DATABASE; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      # 6. Run integration tests
      - name: Run Integration Tests
        run: npm test